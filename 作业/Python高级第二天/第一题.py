"""
pip 第三方包管理工具,可以安装,卸载,查询,升级
    安装:pip install 包名
    安装指定版本: pip install 包名==版本号
    卸载:pip uninstall 包名
    查询:pip list
    升级:pip install --upgrade 包名
"""
"""
简单数据类型:相同的数据,不管定义多少次,都只会占用一个内存空间
复制数据类型:相同的数据,定义多少次,就开辟多少个内存空间
"""
name = "张三"
name1 = "张三"
# 简单数据类型,相同的数据,只会占用一个内存空间
print(id(name)) # 54820112
print(id(name1)) # 54820112
# 复杂数据类型,定义多少次,就开辟多少个内存空间
ls = [1,2,3]
ls1 = [1,2,3]
print(id(ls)) # 18433448
print(id(ls1)) # 18434608
"""
赋值:a = b ,将等号左边的数据赋值给等号右边的变量
is 和 == 的区别
    is:判断内存地址是否相等
    ==:判断值是否相等
拷贝:
    只有复杂数据类型才能拷贝
    浅拷贝:只做第一层的拷贝
    深拷贝:做递归的拷贝
"""
print(ls is ls1) # False
print(ls == ls1) # True
# 导入copy模块
import copy
ls_new = copy.copy(ls)
print(ls_new) # [1, 2, 3],浅拷贝,第一层
# 修改原来的数据,不会影响现在的数据
ls.append(4)
print(ls)
print(ls_new)
# 递归拷贝,深拷贝
ls3 = [1,2,3,[1,23,[1,[1,5],2],4]]
ls4 = copy.deepcopy(ls3) # [1, 2, 3, [1, 23, [1, [1, 5], 2], 4]] ,深拷贝,递归
print(ls4)
# 修改原来的数据,不会影响现在的数据
ls3[3][2][0] = 99999
print(ls3)
print(ls4) # [1, 2, 3, [1, 23, [1, [1, 5], 2], 4]]
"""
    名字空间: 变量名,函数名,类名的存放空间
        局部名字空间:每个函数所拥有的名字空间
        全局名字空间:每个模块加载执行时创建的
            __name__:保存的是模块名,当前就是main
            __file__:当前文件的绝对路径
            __builtins__:内建名字空间里面的所有内容
        内建名字空间:Python自带的内建名字空间,任何模块都可以访问
"""
print(globals()) # 全局名字空间所有内容
print(locals()) # 局部名字空间的所有内容
"""
作用域
    内建作用域: 代码的任意位置都能使用
    全局作用域: 代码的任意位置都能使用
    局部作用域: 只能在函数里面使用
    闭包作用域: 外函数的变量,作用域内函数中
"""
name = "张三" # 全局变量,全局作用域

def info():
    age = 18 # 局部变量,局部作用域,只能在函数里面使用
    # 用global定义name,就可以在函数里面修改全局变量的值
    global name
    name = "李四"
    print(name,age)
    def show():
        print(age) # age闭包作用域,外函数的变量,作用域内函数中
    show()
info() # 李四